{"version":3,"sources":["App.js","index.js"],"names":["gReadingInfo","gPhrases","getRandomColor","color","i","Math","floor","random","App","_useFabricJSEditor","useFabricJSEditor","editor","onReady","history","_useState","useState","_useState2","_slicedToArray","setColor","_useState3","_useState4","stLineColor","setStLineColor","_useState5","_useState6","cropImage","setCropImage","_useState7","lcnt","localStorage","getItem","Boolean","_useState8","snapOn","setSnapOn","_useState9","Number","_useState10","snapSize","setSnapSize","_useState11","_useState12","cnvZoom","setCnvZoom","_useState13","left","top","width","height","_useState14","objInfo","setObjInfo","fabric","Object","prototype","transparentCorners","cornerColor","cornerSize","hasRotatingPoint","rotatingPointOffset","cornerStyle","useEffect","canvas","__eventListeners","on","mopt","ldelta","e","deltaY","lzm","getZoom","pow","preventDefault","stopPropagation","opt","evt","ctrlKey","this","isDragging","selection","lastPosX","clientX","lastPosY","clientY","vpt","viewportTransform","requestRenderAll","setViewportTransform","getActiveObject","lobj","toFixed","fill","stroke","console","log","lsnapx","round","target","lsnapy","set","setCoords","lwidth","scaleX","lheight","scaleY","lrct","document","getElementById","getBoundingClientRect","setWidth","setHeight","Image","fromURL","mimage","setBackgroundImage","renderAll","bind","originX","originY","backgroundImageStretch","backgroundImage","setFillColor","freeDrawingBrush","setStrokeColor","window","addEventListener","handleResize","removeEventListener","undefined","setZoom","lfileInputRef","React","useRef","_jsxs","className","children","_jsx","id","style","border","concat","FabricJSCanvas","Button","variant","onClick","mcanvas","_getQuarterPoint","_getQuarterPoint2","x","y","c","Circle","radius","strokeWidth","add","Rect","disabled","addLine","s","length","Textbox","fontStyle","fontWeight","editable","type","toGroup","toActiveSelection","discardActiveObject","sel","ActiveSelection","getObjects","setActiveObject","isDrawingMode","_objects","splice","push","pop","remove","marginLeft","value","onChange","svg","toSVG","info","loadSVGFromString","objects","options","filter","_","index","forEach","object","Switch","checked","setItem","TextField","label","InputProps","inputProps","min","max","step","fontSize","padding","Slider","margin","mValue","current","click","ref","files","lfile","lreader","FileReader","onload","ljson","result","loadFromJSON","readAsText","display","JSON","stringify","toJSON","lblob","Blob","lurl","URL","createObjectURL","link","createElement","href","download","rootElement","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.bbd6724b.chunk.js","sourcesContent":["/*************************************************************************\n This is where all the actions are :\n  -Creation of Canvas\n -Mouse Interaction\n -Add / remove objects\n *************************************************************************/\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { TextField, Slider } from '@mui/material';\n\n// import Checkbox from '@mui/material/Checkbox';\nimport Switch from '@mui/material/Switch';\nimport { fabric } from \"fabric\";\nimport { FabricJSCanvas, useFabricJSEditor } from \"fabricjs-react\";\n//import BtnClockInOut from \"./BtnClockInOut.js\";\n// import TxtInputUpDown from \"./TxtInputUpDown.js\";\nimport \"./styles.css\";\n\n//************** Constants, Global, Variabls and Utility Functions *************\n\nconst gAngleSnap = 5;\nvar gReadingInfo = false;\n\nconst gPhrases = [\n  'Lorem ipsum dolor sit amet',\n  'Consectetur adipiscing elit',\n  'Sed do eiusmod tempor incididunt',\n  'Ut labore et dolore magna aliqua',\n  'Ut enim ad minim veniam',\n  'Quis nostrud exercitation ullamco laboris',\n  'Nisi ut aliquip ex ea commodo consequat',\n  'Duis aute irure dolor in reprehenderit',\n  'Voluptate velit esse cillum dolore eu fugiat nulla pariatur',\n  'Excepteur sint occaecat cupidatat non proident',\n];\n\nfunction getRandomColor() {\n  var letters = \"0123456789ABCDEF\";\n  var color = \"#\";\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nfunction getQuarterPoint(mcanvas) {\n  const lx = mcanvas.width / 8;\n  const ly = mcanvas.height / 8;\n  return [lx, ly];\n}\n\n// ****************** The Main Entry Function **************************************\nexport default function App() {\n  const { editor, onReady } = useFabricJSEditor();\n  const history = [];\n  \n  //======== declare persistent variables ==================================\n  const [color, setColor] = useState(\"#35363a\");\n  const [stLineColor, setStLineColor] = useState(\"#35363a\");\n\n  const [cropImage, setCropImage] = useState(true);\n  //-- load Grid On/Off \"gridOn\" through localStorage() with default value \n  // use localStorage to store the state variables initialize to something if nothing has been stored\n  const [snapOn, setSnapOn] = useState(() => {\n    const lcnt = localStorage.getItem('loSnapOn');\n    return (lcnt !== null ? Boolean(lcnt) : true);\n  });\n  //-- load snap grid size from localSetting \n  const [snapSize, setSnapSize] = useState(() => {\n    const lcnt = localStorage.getItem('loSnapSize');\n    return (lcnt !== null ? Number(lcnt) : 10);\n  });\n  //-- keeps track of the zoom\n  const [cnvZoom, setCnvZoom] = useState(1);\n  const [objInfo, setObjInfo] = useState({left: 0, top: 0, width: 0, height: 0});\n\n  //-- customize the selection handles\n  fabric.Object.prototype.transparentCorners = false;\n  fabric.Object.prototype.cornerColor = \"blue\";\n  fabric.Object.prototype.cornerSize = 10;\n  fabric.Object.prototype.hasRotatingPoint = false;\n  fabric.Object.prototype.rotatingPointOffset = 5;\n  fabric.Object.prototype.cornerStyle = \"circle\";\n\n  //== This useEffect() is for moving and sizing the canvas\n  useEffect(() => {\n    //-- Needs to fileter out necessary calls  \n    if (!editor || !fabric) return;\n    \n    //-- IMPORTANT: Must always clear all the canvas hooks and rehook them\n    //-- Have to recreate the hook when the variable changes because\n    //-- useEffect() hooks on canvas stuff does not read the variable in realtime\n    editor.canvas.__eventListeners = {};\n    \n    //-- zoom with scroll wheel \n    if (!editor.canvas.__eventListeners[\"mouse:wheel\"]) {\n      editor.canvas.on(\"mouse:wheel\", function (mopt) {\n        var ldelta = mopt.e.deltaY;\n        var lzm = editor.canvas.getZoom();\n        lzm *= 0.999 ** ldelta;\n        if (lzm > 10) lzm = 10;\n        if (lzm < 0.01) lzm = 0.01;\n        //-- this will trigger cnvZoom useEffect()\n        setCnvZoom(lzm);\n        // editor.canvas.zoomToPoint({ x: mopt.e.offsetX, y: mopt.e.offsetY }, lzm);\n        \n        // -- Tell the system to not perform it's default behavior since we are doing something different\n        mopt.e.preventDefault();\n        mopt.e.stopPropagation();\n      });\n    }\n\n    if (!editor.canvas.__eventListeners[\"mouse:down\"]) {\n      editor.canvas.on(\"mouse:down\", function (opt) {\n        var evt = opt.e;\n        if (evt.ctrlKey === true) {\n          this.isDragging = true;\n          this.selection = false;\n          this.lastPosX = evt.clientX;\n          this.lastPosY = evt.clientY;\n        }\n      });\n    }\n\n    if (!editor.canvas.__eventListeners[\"mouse:move\"]) {\n      editor.canvas.on(\"mouse:move\", function (opt) {\n        if (this.isDragging) {\n          var e = opt.e;\n          var vpt = this.viewportTransform;\n          vpt[4] += e.clientX - this.lastPosX;\n          vpt[5] += e.clientY - this.lastPosY;\n          this.requestRenderAll();\n          this.lastPosX = e.clientX;\n          this.lastPosY = e.clientY;\n        }\n      });\n    }\n\n    if (!editor.canvas.__eventListeners[\"mouse:up\"]) {\n      editor.canvas.on(\"mouse:up\", function (opt) {\n        // on mouse up we want to recalculate new interaction\n        // for all objects, so we call setViewportTransform\n        this.setViewportTransform(this.viewportTransform);\n        this.isDragging = false;\n        this.selection = true;\n\n        //-- have to read the selected object info here because \"object:selected\" does not work\n        if (!editor.canvas.getActiveObject()) {\n          return;\n        }\n        var lobj = editor.canvas.getActiveObject();\n        \n        //-- this is the only way to set the values don't bother with \n        //-- setObjInfo([10, 10, 10, 10, 10]) it does not work!!!!!!!!\n        \n        setObjInfo({\n          left: lobj.left.toFixed(1),\n          top: lobj.top.toFixed(1),\n          width: lobj.width.toFixed(1),\n          height: lobj.height.toFixed(1)\n        });\n        //-- this will trigger useEffect() for color and stLineColor, gReadingInfo tells the useEffect()\n        // -- to not set the color just change it \n        gReadingInfo = true;\n        setColor(lobj.fill);\n        setStLineColor(lobj.stroke);\n\n        //-- don't chekc it here it's not immediate!!!!!\n        console.log(\"reading info\");\n      });\n    }\n\n  }, [editor]);\n\n\n  //==== hook to object moving event on editor (canvas) ===========\n  useEffect(() => {\n    //-- prevent uncessary process (useEffect() gets called oten and need to filter out)\n    if (!editor || !fabric || !snapOn) return;\n        \n    //--- hook to object moving -----------\n    if (!editor.canvas.__eventListeners[\"object:moving\"]) {\n      //---- Snap to grid\n      // --- Suri: need to Improve on this\n      editor.canvas.on(\"object:moving\", function (e) {\n        const lsnapx = Math.round(e.target.left / snapSize);\n        const lsnapy = Math.round(e.target.top / snapSize);\n\n        // if ((lsnapx * 2) % 2 === 0 && (lsnapy * 2) % 2 === 0) {\n        e.target\n          .set({\n            left: lsnapx * snapSize,\n            top: lsnapy * snapSize\n          })\n          .setCoords();\n        // }\n      });\n    }\n\n    //----- hook to object sizing which is scaling size stays the same  -------\n    if (!editor.canvas.__eventListeners[\"object:scaling\"]) {\n      //---- Snap to grid\n      editor.canvas.on(\"object:scaling\", function (e) {\n        const lwidth = Math.round(\n          (e.target.width * e.target.scaleX) / snapSize\n        );\n        const lheight = Math.round(\n          (e.target.height * e.target.scaleY) / snapSize\n        );\n\n        // if ((lwidth * 2) % 2 === 0 || (lheight * 2) % 2 === 0) {\n        //console.log(\"snap:\" + e.target.scaleX + \",\" + lwidth * lgrid);\n        e.target\n          .set({\n            scaleX: (lwidth * snapSize) / e.target.width,\n            scaleY: (lheight * snapSize) / e.target.height\n          }).setCoords();\n        // }\n      });\n    }\n\n    //==== hook to object rotating  =========\n    // if (!editor.canvas.__eventListeners[\"object:rotating\"]) {\n    //   //---- Snap to angle (not working )\n    //   editor.canvas.on(\"object:rotating\", function (e) {\n    //     const langle = Math.round(e.target.angle / gAngleSnap);\n    //     // if ((lwidth * 2) % 2 === 0 || (lheight * 2) % 2 === 0) {\n    //     //console.log(\"snap:\" + e.target.scaleX + \",\" + lwidth * lgrid);\n    //     e.target\n    //       .set({\n    //         angle: (langle * gAngleSnap)\n    //       }).setCoords();\n    //     // }\n    //     });     \n    // }\n  }, [editor]);\n  \n  // //-- Hooks to gridOn. Will get called everytime gridOn is changed\n  // useEffect(() => {\n  //   //-- Needs to fileter out necessary calls  \n  //   if (!editor || !fabric) {\n  //     return;\n  //   }\n  //   //-- store it locally in the settings\n  //   console.log(\"update gridOn:\" + gridOn);\n  //   localStorage.setItem('loSnapOn', gridOn);\n  // }, [editor, gridOn]);\n  \n  //========== All Other Events ==========================================\n  const addBackground = () => {\n    if (!editor || !fabric) return;\n\n    fabric.Image.fromURL(\n      \"https://static6.depositphotos.com/1016929/586/i/950/depositphotos_5867515-stock-photo-large-radio-antenna.jpg\",\n      // \"https://thegraphicsfairy.com/wp-content/uploads/2019/02/Anatomical-Heart-Illustration-Black-GraphicsFairy.jpg\",\n      (mimage) => {\n        editor.canvas.setBackgroundImage(\n          mimage,\n          editor.canvas.renderAll.bind(editor.canvas),\n          //-- draw center align\n          {\n            originX: 'center',\n            originY: 'center',\n            top: editor.canvas.height / 2,\n            left: editor.canvas.width / 2,\n            backgroundImageStretch: 'none'          }\n          //-- draw stretch fill\n          // {\n          //   scaleX: editor.canvas.width / mimage.width,\n          //   scaleY: editor.canvas.height / mimage.height\n          // }\n        );\n      }\n    );\n  };\n\n  //===== Hooks to keep repaint the background image if changes =====================\n  useEffect(() => {\n    if (!editor || !fabric) return;\n    \n    //-- Resize Fabric Canvas to match HTML Canvas\n    var lhtmlCanvas = document.getElementById(\"ciPaintBox\");\n    var lrct = lhtmlCanvas.getBoundingClientRect();\n    //-- resize Fabric Canvas to match the size of the HTML canvas\n    editor.canvas.setWidth(lrct.width - 10);\n    editor.canvas.setHeight(lrct.height - 10);\n\n    addBackground();\n\n    editor.canvas.renderAll();\n  }, [editor?.canvas.backgroundImage]);\n\n  //===== Hooks to Color Change Event =======================\n  useEffect(() => {\n    if (!editor || !fabric) return;\n    // -- if we are just reading the info from the object then exist early      \n    if (gReadingInfo) {\n      gReadingInfo = false;\n      return;\n    }\n    editor.setFillColor(color);\n    //editor.setStrokeColor(color);\n  }, [color]);\n\n  //===== Hooks to Color Change Event =======================\n  useEffect(() => {\n    if (!editor || !fabric) return;\n    // -- if we are just reading the info from the object then exist early\n    if (gReadingInfo) {\n      gReadingInfo = false;\n      return;\n    }\n    editor.canvas.freeDrawingBrush.color = stLineColor;\n    editor.setStrokeColor(stLineColor);    \n    //editor.setStrokeColor(color);\n  }, [stLineColor]);\n\n \n  //==== This useEffect event block is for detecting the unload of the page, so we can save settings =====\n  // useEffect(() => {\n  //   //-- Needs to fileter out necessary calls  \n  //   if (!editor || !fabric) {\n  //     return;\n  //   }\n\n  //   const handleBeforeUnload = () => {\n  //     console.log(\"save settings:\" + gridOn);\n  //     localStorage.setItem('loSnapOn', gridOn);\n  //   };\n\n  //   window.addEventListener('beforeunload', handleBeforeUnload);\n  //   return () => {\n  //     window.removeEventListener('beforeunload', handleBeforeUnload);\n  //   };\n  // }, [editor]);\n\n  //==== This useEffect event fire after each render (happens often) =====\n  // useEffect(() => {\n  //   //-- Needs to fileter out necessary calls  \n  //   if (!editor || !fabric) {\n  //     return;\n  //   }\n\n  //   if (!editor.canvas.__eventListeners[\"after:render\"]) {\n  //     editor.canvas.on(\"after:render\", function () {\n  //       console.log(\"ater render\");\n  //     });\n  //   }\n  // }, [editor]);\n\n  //=====- This useEffect event block is for detecting the resizing of the main html page ==========\n  useEffect(() => {\n    //-- Needs to fileter out necessary calls  \n    if (!editor || !fabric) return;\n    \n    // Define a function that updates the width and height states based on the window size\n    function handleResize() {\n      //-- get the instance of the <div> painbox\n      var lhtmlCanvas = document.getElementById(\"ciPaintBox\");\n      //-- get the size of the <div>\n      var lrct = lhtmlCanvas.getBoundingClientRect();\n      //-- resize Fabric Canvas to match the size of the HTML canvas (must check for undefined)\n      if (editor !== undefined) {\n        editor.canvas.setWidth(lrct.width - 10);\n        editor.canvas.setHeight(lrct.height - 10);\n      }\n    }\n\n    \n    // Add an event listener for the window resize event\n    window.addEventListener(\"resize\", handleResize);\n\n    // Remove the event listener when the component is unmounted\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  //== This will get triggered when cnvZoom changes, it will then update the canvas\n  useEffect(() => {\n    //-- Needs to fileter out necessary calls  \n    if (!editor || !fabric) return;\n\n    // var i = cnvZoom;\n    // if (i > 20) i = 20;\n    // if (i < 0.01) i = 0.01;\n\n    // setCnvZoom(i);\n    editor.canvas.setZoom(cnvZoom);\n  }, [cnvZoom]);\n    \n  const handleZoomChange = (e, mValue) => {\n      \n    if (mValue > 10) mValue = 10;\n    if (mValue < 0.01) mValue = 0.01;\n    //-- this will trigger useEffect() for cnvZoom\n    setCnvZoom(mValue);\n    \n    //-- don't know if needed this\n    e.preventDefault();\n    e.stopPropagation();      \n  };\n\n  //============== All the Button Events ==========================\n  const btnSaveCavnasJSON = () => {\n    const ljson = JSON.stringify(editor.canvas.toJSON());\n    const lblob = new Blob([ljson], { type: \"application/json\" });\n    const lurl = URL.createObjectURL(lblob);\n    const link = document.createElement(\"a\");\n    link.href = lurl;\n    link.download = \"FabricCanvas.json\";\n    link.click();\n  };\n\n  const btnLoadCanvasJSON = (e) => {\n      //-- lfileInput is the reference to HTML <input ... > \n      //-- if user canccel out of the file dialoge then just exit\n      if (e.target.files.length <= 0) {\n        return;\n      }\n      var lfile = e.target.files[0];\n      //-- create a reader to read it\n      var lreader = new FileReader();\n      //-- callback event for lreader\n      lreader.onload = (e) => {\n        const ljson = e.target.result;\n        //console.log(ljson);\n        editor.canvas.loadFromJSON(ljson);\n        editor.canvas.renderAll();\n      };\n      //-- this will fire the onload event\n      lreader.readAsText(lfile);\n      \n      //-- IMPORTANT: have to clear the file or it will not trigger onChange\n      lfileInputRef.current.value = null; \n    };\n\n  const btnToggleSize = () => {\n    editor.canvas.freeDrawingBrush.width === 12\n      ? (editor.canvas.freeDrawingBrush.width = 5)\n      : (editor.canvas.freeDrawingBrush.width = 12);\n  };\n\n  const btnToggleDraw = () => {\n    editor.canvas.isDrawingMode = !editor.canvas.isDrawingMode;\n  };\n\n  const btnUndo = () => {\n    if (editor.canvas._objects.length > 0) {\n      history.push(editor.canvas._objects.pop());\n    }\n    editor.canvas.renderAll();\n  };\n\n  const btnRedo = () => {\n    if (history.length > 0) {\n      editor.canvas.add(history.pop());\n    }\n  };\n\n  const btnClear = () => {\n    editor.canvas._objects.splice(0, editor.canvas._objects.length);\n    history.splice(0, history.length);\n    editor.canvas.discardActiveObject();\n    editor.canvas.renderAll();\n  };\n\n  const btnRemoveSelectedObject = () => {\n    editor.canvas.remove(editor.canvas.getActiveObject());\n  };\n\n  const btnAddCircle = () => {\n    //editor.addCircle();\n    const [x, y] = getQuarterPoint(editor.canvas);\n    console.log(x + \", \" + y);\n    var c = new fabric.Circle({\n      radius: 200,\n      left: x,\n      top: y,\n      fill: getRandomColor(),\n      stroke: getRandomColor(),\n      strokeWidth: 2\n    });\n    editor.canvas.add(c);\n  };\n\n  const btnAddLine = () => {\n    editor.addLine();\n  };\n\n  const btnAddRectangle = () => {\n    //editor.addRectangle();\n    var c = new fabric.Rect({\n      left: 300,\n      top: 300,\n      width: 300,\n      height: 300,\n      fill: getRandomColor(),\n      stroke: getRandomColor(),\n      strokeWidth: 2\n    });\n    editor.canvas.add(c);\n  };\n\n  const btnAddText = () => {\n    var s = gPhrases[Math.floor(Math.random() * gPhrases.length)];\n    var c = new fabric.Textbox(s, {\n      left: 300,\n      top: 300,\n      fontStyle: \"normal\",\n      fontWeight: \"normal\",\n      stroke: 0,\n      editable: true,\n      fill: getRandomColor()\n    });\n    editor.canvas.add(c);\n    \n    //editor.addText(\"inset text\");\n  };\n\n  const btnExportSVG = () => {\n    const svg = editor.canvas.toSVG();\n    console.info(svg);\n  };\n\n  const btnFromSVG = () => {\n    fabric.loadSVGFromString(\n      `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\" ?>\n    <!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" xml:space=\"preserve\">\n    <desc>Created with Fabric.js 5.3.0</desc>\n    <defs>\n    </defs>\n    <g transform=\"matrix(1 0 0 1 662.5 750)\"  >\n      <image style=\"stroke: none; stroke-width: 0; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; fill: rgb(0,0,0); fill-rule: nonzero; opacity: 1;\"  xlink:href=\"https://thegraphicsfairy.com/wp-content/uploads/2019/02/Anatomical-Heart-Illustration-Black-GraphicsFairy.jpg\" x=\"-662.5\" y=\"-750\" width=\"1325\" height=\"1500\"></image>\n    </g>\n    <g transform=\"matrix(1 0 0 1 120.5 120.5)\"  >\n    <circle style=\"stroke: rgb(53,54,58); stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; fill: rgb(255,255,255); fill-opacity: 0; fill-rule: nonzero; opacity: 1;\"  cx=\"0\" cy=\"0\" r=\"20\" />\n    </g>\n    <g transform=\"matrix(1 0 0 1 245.5 200.5)\"  >\n    <line style=\"stroke: rgb(53,54,58); stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; fill: rgb(0,0,0); fill-rule: nonzero; opacity: 1;\"  x1=\"-75\" y1=\"-50\" x2=\"75\" y2=\"50\" />\n    </g>\n    <g transform=\"matrix(1 0 0 1 141.4 220.03)\" style=\"\"  >\n        <text xml:space=\"preserve\" font-family=\"Arial\" font-size=\"16\" font-style=\"normal\" font-weight=\"normal\" style=\"stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; fill: rgb(53,54,58); fill-rule: nonzero; opacity: 1; white-space: pre;\" ><tspan x=\"-16.9\" y=\"-5.46\" >inset</tspan><tspan x=\"-16.9\" y=\"15.51\" >text</tspan></text>\n    </g>\n    <g transform=\"matrix(1 0 0 1 268.5 98.5)\"  >\n    <rect style=\"stroke: rgb(53,54,58); stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-dashoffset: 0; stroke-linejoin: miter; stroke-miterlimit: 4; fill: rgb(255,255,255); fill-opacity: 0; fill-rule: nonzero; opacity: 1;\"  x=\"-20\" y=\"-20\" rx=\"0\" ry=\"0\" width=\"40\" height=\"40\" />\n    </g>\n    </svg>`,\n      (objects, options) => {\n        editor.canvas._objects.splice(0, editor.canvas._objects.length);\n        editor.canvas.backgroundImage = objects[0];\n        const newObj = objects.filter((_, index) => index !== 0);\n        newObj.forEach((object) => {\n          editor.canvas.add(object);\n        });\n\n        editor.canvas.renderAll();\n      }\n    );\n  };\n\n  //==== this is the SnapOn CheckBox Box Event =======\n  const chkSnapOn = (e) => {\n    //-- this will set gridOn based on the attached checkbox\n\n    //-- WARNING: the change on gridOn will not be immediate, \n    //  it will get update on the next render\n    setSnapOn(e.target.checked);\n\n    console.log(\"snapOn:\" + snapOn);\n    //-- store it locally in the settings, but, have to use the value from checkbox\n    //console.log(\"update gridOn:\" + e.target.checked);     \n    localStorage.setItem('loSnapOn', e.target.checked);\n  };\n\n  const txtSetSnapSize = (e) => {\n    setSnapSize(e.target.value);\n    //console.log(\"snap:\" + snapSize);\n    localStorage.setItem('loSnapSize', snapSize);\n  };\n\n  const btnGroup = (e) => {\n    if (!editor.canvas.getActiveObject()) {\n      return;\n    }\n    if (editor.canvas.getActiveObject().type !== 'activeSelection') {\n      return;\n    }\n    editor.canvas.getActiveObject().toGroup();\n    editor.canvas.requestRenderAll();  \n  };\n\n  const btnUnGroup = (e) => {\n    \n    if (!editor.canvas.getActiveObject()) {\n      return;\n    }\n    if (editor.canvas.getActiveObject().type !== 'group') {\n      return;\n    }\n    editor.canvas.getActiveObject().toActiveSelection();\n    editor.canvas.requestRenderAll();  \n  };\n\n  const btnSelectAll = (e) => {\n    \n    editor.canvas.discardActiveObject();\n    var sel = new fabric.ActiveSelection(editor.canvas.getObjects(), {\n      canvas: editor.canvas\n    });\n\n    editor.canvas.setActiveObject(sel);\n    editor.canvas.requestRenderAll();\n  };\n\n  const btnUnSelectAll = (e) => {\n    \n    editor.canvas.discardActiveObject();\n    editor.canvas.requestRenderAll();\n  };\n\n  //-- fileInputRef is use for refering to <input... />\n  const lfileInputRef = React.useRef();\n  \n  // ========= The page HTML rendering stuff (final output) ==============================\n  return (\n    // This is also where you will use the React Components\n    <div className=\"App\">\n\n      <h3>Irus Graphic Editor</h3>\n\n      {/* The Drawing Canvas stuff*/}\n      <div\n        id=\"ciPaintBox\"\n        style={{\n          border: `3px ${!cropImage ? \"dotted\" : \"solid\"} Gray`\n        }}\n      >\n        {/* We attached Fabric Canvas to div via id=\"ciPaintBox\"*/}\n        <FabricJSCanvas className=\"ciPaintBox\" onReady={onReady} />\n      </div>\n\n      {/* Right-pane panel */}\n      <div id=\"ciRightPane\">\n      \n        {/* These buttons are MUI buttons */}\n        <Button variant=\"contained\" id=\"ciBtnTool\" onClick={btnAddCircle}>Add circle</Button>\n        <Button variant=\"contained\" id=\"ciBtnTool\" onClick={btnAddRectangle} disabled={!cropImage}>Add Rect</Button>\n        <Button variant=\"contained\" id=\"ciBtnTool\" onClick={btnAddLine}>Add Line</Button>\n      \n        {/* These buttons are the stand plain buttons */}\n        <button id=\"ciBtnTool\" onClick={btnAddText} disabled={!cropImage}>Add Text</button>\n        <button id=\"ciBtnTool\" onClick={btnGroup} disabled={!cropImage}>Group</button>\n        <button id=\"ciBtnTool\" onClick={btnUnGroup} disabled={!cropImage}>Ungroup</button>\n        <button id=\"ciBtnTool\" onClick={btnSelectAll} disabled={!cropImage}>Select All</button>\n        <button id=\"ciBtnTool\" onClick={btnUnSelectAll} disabled={!cropImage}>Unselect All</button>\n        <button id=\"ciBtnTool\" onClick={btnToggleDraw} disabled={!cropImage}>Toggle draw</button>  \n        <button id=\"ciBtnTool\" onClick={btnClear} disabled={!cropImage}>Clear</button>        \n        <button id=\"ciBtnTool\" onClick={btnUndo} disabled={!cropImage}>Undo</button>\n        <button id=\"ciBtnTool\" onClick={btnRedo} disabled={!cropImage}>Redo</button>        \n        <button id=\"ciBtnTool\" onClick={btnToggleSize} disabled={!cropImage}>ToggleSize</button>        \n        <button id=\"ciBtnTool\" onClick={btnRemoveSelectedObject} disabled={!cropImage}>Delete</button>\n        <button id=\"ciBtnTool\" onClick={(e) => setCropImage(!cropImage)}>Crop</button>\n        \n        <input\n            id=\"ciBtnTool\"\n            style={{\n              marginLeft: \"0px\"\n            }}\n            type=\"color\"\n            disabled={!cropImage}\n            value={color}\n            // this will cause useEffect()[color] to fire\n            onChange={(e) => setColor(e.target.value)}\n          />\n        \n        <input\n            id=\"ciBtnTool\"\n            style={{\n              marginLeft: \"0px\"\n            }}\n            type=\"color\"\n            disabled={!cropImage}\n            value={stLineColor}\n            // this will cause useEffect()[stLineColor] to fire\n            onChange={(e) => setStLineColor(e.target.value)}\n          />\n        \n        <button id=\"ciBtnTool\" onClick={btnExportSVG} disabled={!cropImage}>{\" \"}ToSVG</button>      \n        <button id=\"ciBtnTool\" onClick={btnFromSVG} disabled={!cropImage}>FromSVG</button>  \n        <Switch checked={snapOn} onChange={chkSnapOn} color=\"primary\" />\n        \n        <div>\n        <TextField type=\"number\" label=\"Snap Size\" variant=\"outlined\" value={snapSize} onChange={txtSetSnapSize}\n          InputProps={{\n            inputProps: {\n              min: 1,\n              max: 100,\n              step: 1,\n            },\n          }}\n        />\n        </div>\n        \n        {/* display the selected object info */}\n        <div style={{fontSize: \"10px\", padding: \"5px\"}}>\n        <div>{objInfo.left}, {objInfo.top}</div>\n        <div>{objInfo.width}, {objInfo.height}</div> \n        <div>{objInfo.color}</div>  \n        </div>    \n        \n        {/* zoom slider */}\n        <Slider style={{margin: \"0px 10px\"}}\n          value={cnvZoom}\n          min={0.01}\n          max={20}\n          step={0.1}\n          onChange={handleZoomChange}\n          // aria-labelledby=\"continuous-slider\"\n          // aria-label=\"Zoom slider\"\n        />\n\n        {/* for displaying the zoom value if clicked will reset zoom to 1 */}\n        <p  style={{fontSize: \"12px\"}} onClick={() => setCnvZoom(1)} > {cnvZoom.toFixed(1)}x</p>\n        \n        {/* Upload Button */}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          id=\"ciBtnTool\"\n          //-- this will trigger the onChange Event in <input\n          onClick={() => lfileInputRef.current.click()}\n        >\n          Upload File\n        </Button>\n\n        {/* lfileInput is ref to this and will be proccess in btnUpload */}\n        <input\n          ref={lfileInputRef}\n          type=\"file\"\n          //-- only fire when file name changes \n          onChange={btnLoadCanvasJSON}\n          style={{ display: \"none\" }}\n        />\n        <Button id=\"ciBtnTool\" variant=\"contained\" color=\"secondary\" onClick={btnSaveCavnasJSON}>Save Canvas</Button>\n      </div>\n      \n      {/* This is how you add your own component to the screen \n      <BtnClockInOut\n        disabled={false}\n        elapse=\"7:00\"\n        status=\"in\"\n        timestamp=\"12:30:00\"\n        date=\"02/10/2023\"\n      /> */}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\n//import App from \"./AppTest\";\n//import App from \"../example/App\";\nimport App from \"./App.js\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}